import os
from aiogram import Router, F, types
from aiogram.types import Message, FSInputFile
from aiogram.fsm.context import FSMContext
from aiogram.enums import ChatAction
from utils.problem1states import Problem1States
from utils.validators import validate_input_float
from .ppf_plotter import plot_PPF
from keyboards import reply
import time


router = Router()


@router.message(F.text.lower().in_(["1 –∑–∞–¥–∞—á–∞"]))
async def handle_problem1(message: Message, state: FSMContext):
    await message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ –∑–∞–¥–∞—á—É –ø–æ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—é –æ–±—â–µ–π –ö–ü–íü•á\n"
                         "–ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –í—ã –≤–≤–µ–¥–µ—Ç–µ –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –í—ã –ø–æ–ª—É—á–∏—Ç–µ –æ–±—â–∏–π –≥—Ä–∞—Ñ–∏–∫ –ö–ü–í –¥–ª—è –¥–≤—É—Ö –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π —Ç–æ–≤–∞—Ä–æ–≤ –ê –∏ –ë.\n"
                         "–í–≤–µ–¥–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –æ–±—ä–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞ –ê –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è 1:", reply_markup=reply.in_task)
    await state.set_state(Problem1States.InputA1)


@router.message(Problem1States.InputA1)
async def input_a1(message: types.Message, state: FSMContext):
    if await validate_input_float(message, state, 'a1'):
        await message.answer("–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –æ–±—ä–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞ –ë –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è 1:", reply_markup=reply.in_task)
        await state.set_state(Problem1States.InputB1)


@router.message(Problem1States.InputB1)
async def input_b1(message: types.Message, state: FSMContext):
    if await validate_input_float(message, state, 'b1'):
        await message.answer("–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –æ–±—ä–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞ –ê –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è 2:", reply_markup=reply.in_task)
        await state.set_state(Problem1States.InputA2)


@router.message(Problem1States.InputA2)
async def input_a2(message: types.Message, state: FSMContext):
    if await validate_input_float(message, state, 'a2'):
        await message.answer("–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –æ–±—ä–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞ –ë –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è 2:", reply_markup=reply.in_task)
        await state.set_state(Problem1States.InputB2)


@router.message(Problem1States.InputB2)
async def input_b2(message: types.Message, state: FSMContext):
    if await validate_input_float(message, state, 'b2'):
        user_id = message.from_user.id

        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        data = await state.get_data()

        await message.answer("–í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã! –í–æ—Ç —á—Ç–æ –≤—ã –≤–≤–µ–ª–∏:\n"
                             f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –æ–±—ä–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞ –ê –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è 1: {data.get('a1')}\n"
                             f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –æ–±—ä–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞ –ë –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è 1: {data.get('b1')}\n"
                             f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –æ–±—ä–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞ –ê –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è 2: {data.get('a2')}\n"
                             f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –æ–±—ä–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞ –ë –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è 2: {data.get('b2')}\n"
                             )

        await message.bot.send_chat_action(
            chat_id=message.chat.id,
            action=ChatAction.UPLOAD_DOCUMENT
        )
        timestamp = int(time.time())  # –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        # –°—Ç—Ä–æ–∏–º –≥—Ä–∞—Ñ–∏–∫ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –Ω–∞ –¥–∏—Å–∫
        plot_PPF(data.get('a1'), data.get('b1'), data.get(
            'a2'), data.get('b2'), user_id, timestamp)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥—Ä–∞—Ñ–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await message.answer_photo(FSInputFile(f'handlers/problems/{user_id}_{timestamp}.png'), caption="–í–æ—Ç –≤–∞—à –≥—Ä–∞—Ñ–∏–∫üìä", reply_markup=reply.main)

        os.remove(f"handlers/problems/{user_id}_{timestamp}.png")

        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.clear()
